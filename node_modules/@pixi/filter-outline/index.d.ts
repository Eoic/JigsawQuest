import type { CLEAR_MODES } from '@pixi/core';
import { Filter } from '@pixi/core';
import type { FilterSystem } from '@pixi/core';
import type { RenderTexture } from '@pixi/core';

/**
 * OutlineFilter, originally by mishaa
 * http://www.html5gamedevs.com/topic/10640-outline-a-sprite-change-certain-colors/?p=69966
 * http://codepen.io/mishaa/pen/emGNRB<br>
 * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/outline.png)
 *
 * @class
 * @extends PIXI.Filter
 * @see {@link https://www.npmjs.com/package/@pixi/filter-outline|@pixi/filter-outline}
 * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters} *
 * @example
 *  someSprite.filters = [new OutlineFilter(2, 0x99ff99)];
 */
export declare class OutlineFilter extends Filter {
    /** The minimum number of samples for rendering outline. */
    static MIN_SAMPLES: number;
    /** The maximum number of samples for rendering outline. */
    static MAX_SAMPLES: number;
    private _thickness;
    private _alpha;
    private _knockout;
    /**
     * @param {number} [thickness=1] - The tickness of the outline. Make it 2 times more for resolution 2
     * @param {number} [color=0x000000] - The color of the outline.
     * @param {number} [quality=0.1] - The quality of the outline from `0` to `1`, using a higher quality
     *        setting will result in slower performance and more accuracy.
     * @param {number} [alpha=1.0] - The alpha of the outline.
     * @param {boolean} [knockout=false] - Only render outline, not the contents.
     */
    constructor(thickness?: number, color?: number, quality?: number, alpha?: number, knockout?: boolean);
    /**
     * Get the angleStep by quality
     * @private
     */
    private static getAngleStep;
    apply(filterManager: FilterSystem, input: RenderTexture, output: RenderTexture, clear: CLEAR_MODES): void;
    /**
     * The alpha of the outline.
     * @default 1.0
     */
    get alpha(): number;
    set alpha(value: number);
    /**
     * The color of the outline.
     * @default 0x000000
     */
    get color(): number;
    set color(value: number);
    /**
     * Only render outline, not the contents.
     * @default false
     */
    get knockout(): boolean;
    set knockout(value: boolean);
    /**
     * The thickness of the outline.
     * @default 1
     */
    get thickness(): number;
    set thickness(value: number);
}

export { }
